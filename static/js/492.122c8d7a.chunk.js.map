{"version":3,"file":"static/js/492.122c8d7a.chunk.js","mappings":"0IAIA,eACE,OAAsCA,EAAAA,EAAAA,UAAS,GAAE,eAA1CC,EAAc,KAAEC,EAAW,KASlC,OARAC,EAAAA,EAAAA,kBAAgB,WACd,SAASC,IACPF,EAAYG,OAAOC,YACrB,CAGA,OAFAD,OAAOE,iBAAiB,SAAUH,GAE3B,kBAAMC,OAAOG,oBAAoB,SAAUJ,EAAgB,CACpE,GAAG,IACIH,CACR,C,6GCXD,aAAqB,IAAD,IAEVQ,GAAUC,EAAAA,EAAAA,KAChB,GAA6BV,EAAAA,EAAAA,WAAS,GAAM,eAArCW,EAAQ,KAACC,EAAW,KAErBC,EAA6C,QAAvC,EAAGC,SAASC,eAAe,oBAAY,OAAyB,QAAzB,EAApC,EAAsCC,+BAAuB,WAAzB,EAApC,EAA+DC,IAkBlF,OAXIC,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAI,SAASP,EACpB,GAAG,CAACA,KAGTV,EAAAA,EAAAA,kBAAgB,WACUS,EAAtBH,GAAaI,GACbM,QAAQC,IAAI,YAAYX,EAC1B,GAAG,CAACA,KAIN,kBAAOY,UAAWV,EAAW,0BAA4B,oBAG5D,C","sources":["hooks/useWindowPosition.js","layout/Aside/index.jsx"],"sourcesContent":["\r\nimport React, { useLayoutEffect, useState } from 'react';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default() =>{\r\n  const [scrollPosition, setPosition] = useState(0);\r\n  useLayoutEffect(() => {\r\n    function updatePosition() {\r\n      setPosition(window.pageYOffset);\r\n    }\r\n    window.addEventListener('scroll', updatePosition);\r\n    // updatePosition();\r\n    return () => window.removeEventListener('scroll', updatePosition);\r\n  }, []);\r\n  return scrollPosition;\r\n}","import useWindowPosition from 'hooks/useWindowPosition'\r\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport './style.scss'\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () =>{\r\n\r\n    const scrollPos=useWindowPosition()\r\n    const [isActive,setIsActive]=useState(false)\r\n    // const [offset,setOffset]=useState()\r\n    const offset = document.getElementById('portfolio')?.getBoundingClientRect()?.top;\r\n    \r\n    // useLayoutEffect(() => {\r\n    //     const offsetVal = document.getElementById('portfolio')?.getBoundingClientRect()?.top;\r\n    //     setOffset(offsetVal)\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"offset\",offset)\r\n         }, [offset])\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        scrollPos >= offset ? setIsActive(true) : setIsActive(false)\r\n        console.log(\"scrollpos\",scrollPos)\r\n      }, [scrollPos])\r\n\r\n\r\nreturn (\r\n    <aside className={isActive ? \"all_bg_container active\" : \"all_bg_container\" }/>\r\n)\r\n    \r\n}\r\n"],"names":["useState","scrollPosition","setPosition","useLayoutEffect","updatePosition","window","pageYOffset","addEventListener","removeEventListener","scrollPos","useWindowPosition","isActive","setIsActive","offset","document","getElementById","getBoundingClientRect","top","useEffect","console","log","className"],"sourceRoot":""}